\name{generateCompleteResults}
\docType{methods}
\alias{generateCompleteResults}
\title{
   generateCompleteResults (DEPRECIATED)
}
\description{
   This function is DEPRECIATED. Use writeCompleteResults instead.
   
   This function takes the raw DEXSeq results and merges in feature 
   annotations, as well as calculating and merging in a number of 
   different normalized and fitted values for each level of the 
   condition variable.
}
\usage{
generateCompleteResults(jscs, outfile.prefix = NULL, 
                        verbose = TRUE,nCores=1,
                        gzip.output = TRUE)
}
\arguments{
  \item{jscs}{
    A \code{JunctionSeqCountSet}. Usually created by \code{\link{runJunctionSeqAnalyses}}.
    
    Alternatively, this can be created manually by \code{\link{readJunctionSeqCounts}}. 
    Dispersions and size factors must then be
    set, usually using functions \code{\link{estimateSizeFactors}} and 
    \code{\link{estimateJunctionSeqDispersions}}. Hypothesis tests must
    be performed by \code{\link{testJunctionsForDJU}}. 
  }
  \item{outfile.prefix}{A string indicating the filename prefix where output files should be saved. If NULL, no data will be saved to file. (Default=NULL)}
  \item{verbose}{A boolean flag indicating whether or not to print progress information during execution. (Default=TRUE)}
  \item{nCores}{If the package multicore is installed, the number of cores to use. If multicore is not installed, then setting this option anything other than the default of 1 does nothing but produce a warning.}
  \item{gzip.output}{A boolean indicating whether output files should be gzipped.}
}
\value{
A data frame containing the results for all listed splice sites of 
genes for which the GLM converged successfully. 
     
Each row is a splice site. The columns are:
\itemize{
  \item First, All columns from the res input file.
  \item exprVST_conditionVal: the variance-stabilizing-transformed fitted expression estimates for the splice site at each condition value.
  \item expr_conditionVal: the un-transformed fitted expression estimates for the splice site at each condition value.
  \item rExprVST_conditionVal: the variance-stabilizing-transformed fitted relative expression estimates for the splice site at each condition value.
  \item rExpr_conditionVal: as above, but without the Variance-stabilizing transformation.
  \item normCountVST_sampleID: Variance-stabilizing-transformed normalized counts for the splice site at each sample.
  \item normCount_sampleID: Variance-stabilizing-transformed normalized counts for the splice site at each sample.
  \item Finally, (if anno.file is non-null), the columns from the annotation file, matched to the given genes/splice sites.
}

Assuming the annotation file is the standard tab-delimited annotation file generated by prepare_annotation_with_splices.py, 
the final columns will be:
\itemize{
  \item featureType: the type of the feature (for these analyses, always equal to either \dQuote{splice_site} or \dQuote{novel_splice_site}.
  \item chrom: The chromosome position.
  \item start
  \item end
  \item strand: \sQuote{+} or \sQuote{-}
  \item gene_id
  \item part_number: the 3-digit sub-feature ID
  \item transcripts: the list of transcripts, delimited by \sQuote{+}
}


}
